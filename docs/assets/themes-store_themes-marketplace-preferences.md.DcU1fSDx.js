import{_ as e,c as s,o as a,a3 as i}from"./chunks/framework.B4p9iGtR.js";const g=JSON.parse('{"title":"Themes Store Preferences ⚙️","description":"","frontmatter":{"title":"Themes Store Preferences ⚙️"},"headers":[],"relativePath":"themes-store/themes-marketplace-preferences.md","filePath":"themes-store/themes-marketplace-preferences.md"}'),t={name:"themes-store/themes-marketplace-preferences.md"},n=i(`<p>When submitting a theme to the Zen Browser Themes Store, you can use custom preferences to define the theme&#39;s appearance and behavior. These preferences are stored in a JSON file named <code>preferences.json</code> and are located in the root directory of the theme.</p><p>The following is an example of a <code>preferences.json</code> file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;uc.example-preference.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is an example preference&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;uc.example-preference.value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is an example value&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Preference&#39;s schema must be defined with a key-value pair. The key must be in the format of firefox&#39;s preference name schema and the value must be a string, describing the preference. Right now, the only supported preference value types are booleans but that might change.</p><h2 id="how-to-use-preferences" tabindex="-1">How to use preferences <a class="header-anchor" href="#how-to-use-preferences" aria-label="Permalink to &quot;How to use preferences&quot;">​</a></h2><p>Let&#39;s say you have a theme that changes the background color of the browser. You can create a preference to allow users to decide whether they want a light or dark background. Here&#39;s how you can define the preference in the <code>preferences.json</code> file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;uc.theme.dark-background.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Enable dark background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>In the theme&#39;s CSS file, you can use the preference to change the background color. Here&#39;s an example:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-moz-bool-pref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &quot;uc.theme.dark-background.enabled&quot;) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>This settings will appear on the preferences page of the theme in the Zen Browser settings. Users can enable or disable the preference to change the background color of the browser.</p><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>Note: Other values such as strings or numbers may be supported in the future. For now, only booleans are supported.</p></div><h1 id="operating-system-specific-settings" tabindex="-1">Operating system specific settings <a class="header-anchor" href="#operating-system-specific-settings" aria-label="Permalink to &quot;Operating system specific settings&quot;">​</a></h1><p>Some preferences may require to be available only for some operating systems. For example, imagine you want an extension that hides the window&#39;s apllication buttons (minimize, maximize, close) on Windows and linux but not on macOS, because macos doesn&#39;t provide a way to clear them individually. You can use a prefix to specify the operating system the preference is available for.</p><p>The prefix is the operating system name in lowercase, followed by a <code>:</code>.</p><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>If you want to use a negative condition, you can use the <code>!</code> character before the operating system name.</p></div><p>Here&#39;s an example of a preference that is only available on Windows and Linux:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;!macos:uc.theme.hide-window-close.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hide window close button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>or for another example:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;windows:uc.theme.change-this-only-for-windows.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Change this only for Windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,19),p=[n];function h(l,o,r,c,d,k){return a(),s("div",null,p)}const E=e(t,[["render",h]]);export{g as __pageData,E as default};
